@page
@model FinanceApp.Web.Pages.PositionTrendsModel
@{
    ViewData["Title"] = "BWA Position Trends";
}

<!-- Premium Page Header -->
<div class="position-trends-header mb-5 animate-in">
    <div class="container-fluid">
        <div class="row align-items-center">
            <div class="col-12">
                <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4">
                    <div class="header-content">
                        <h1 class="heading-1 mb-2 text-premium-primary">
                            <i class="bi bi-graph-up-arrow me-3"></i>
                            BWA Position Trends
                        </h1>
                        <p class="text-premium-muted mb-0">
                            Analyse der zeitlichen Entwicklung Ihrer BWA-Positionen
                        </p>
                    </div>
                    <div class="header-stats d-flex gap-4 mt-3 mt-md-0">
                        <div class="stat-item text-center">
                            <div class="stat-value fw-bold text-premium-primary">@(Model.AvailablePositions?.Count() ?? 0)</div>
                            <div class="stat-label text-xs text-premium-muted">Positionen</div>
                        </div>
                        <div class="stat-item text-center">
                            <div class="stat-value fw-bold text-premium-primary">@(Model.AvailableYears?.Count() ?? 0)</div>
                            <div class="stat-label text-xs text-premium-muted">Jahre</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row g-4">
        <!-- Premium Filter Section -->
        <div class="col-12">
            <div class="card-premium animate-in mb-4">
                <div class="card-header border-0 bg-transparent p-4 pb-0">
                    <div class="d-flex align-items-center justify-content-between mb-3">
                        <div>
                            <h3 class="heading-3 mb-1 text-premium-primary">
                                <i class="bi bi-funnel me-2"></i>
                                Filter & Analyse-Optionen
                            </h3>
                            <p class="text-premium-muted mb-0">Wählen Sie BWA-Positionen und Zeiträume für die Trendanalyse</p>
                        </div>
                        <div class="filter-status">
                            <span class="badge bg-info-subtle text-info px-3 py-2" id="filterStatusBadge">
                                <i class="bi bi-sliders me-1"></i>
                                Alle Positionen
                            </span>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4">
                    <div class="row g-4">
                        <!-- Premium Position Selector -->
                        <div class="col-lg-4 col-md-6">
                            <label for="positionSelect" class="form-label fw-medium mb-2">
                                <i class="bi bi-list-task me-2 text-premium-primary"></i>BWA-Position
                            </label>
                            <select class="form-control-premium" id="positionSelect">
                                <option value="">Alle Positionen anzeigen</option>
                                @if (Model.AvailablePositions != null)
                                {
                                    @foreach (var position in Model.AvailablePositions.OrderBy(p => p))
                                    {
                                        <option value="@position">@position</option>
                                    }
                                }
                            </select>
                            <small class="form-text text-premium-muted">
                                <i class="bi bi-info-circle me-1"></i>
                                Wählen Sie eine spezifische Position oder zeigen Sie alle an
                            </small>
                        </div>
                        
                        <!-- Premium Transaction Type Filter -->
                        <div class="col-lg-4 col-md-6">
                            <label class="form-label fw-medium mb-2">
                                <i class="bi bi-tags me-2 text-premium-primary"></i>Transaktionstyp
                            </label>
                            <div class="premium-radio-group" role="group" aria-label="Transaction type filter">
                                <div class="form-check-premium">
                                    <input type="radio" class="form-check-input" name="typeFilter" id="typeAll" value="all" checked>
                                    <label class="form-check-label" for="typeAll">
                                        <i class="bi bi-circle me-2"></i>Alle Typen
                                    </label>
                                </div>
                                <div class="form-check-premium">
                                    <input type="radio" class="form-check-input" name="typeFilter" id="typeRevenue" value="revenue">
                                    <label class="form-check-label" for="typeRevenue">
                                        <i class="bi bi-arrow-up-circle text-success me-2"></i>Erlöse
                                    </label>
                                </div>
                                <div class="form-check-premium">
                                    <input type="radio" class="form-check-input" name="typeFilter" id="typeExpenses" value="expenses">
                                    <label class="form-check-label" for="typeExpenses">
                                        <i class="bi bi-arrow-down-circle text-danger me-2"></i>Kosten
                                    </label>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Premium Year Selector -->
                        <div class="col-lg-4 col-md-6">
                            <label for="yearSelect" class="form-label fw-medium mb-2">
                                <i class="bi bi-calendar-year me-2 text-premium-primary"></i>Geschäftsjahr
                            </label>
                            <select class="form-control-premium" id="yearSelect">
                                <option value="">Alle Geschäftsjahre</option>
                                @if (Model.AvailableYears != null)
                                {
                                    @foreach (var year in Model.AvailableYears.OrderByDescending(y => y))
                                    {
                                        <option value="@year">@year</option>
                                    }
                                }
                            </select>
                            <small class="form-text text-premium-muted">
                                <i class="bi bi-info-circle me-1"></i>
                                Filterung nach spezifischen Geschäftsjahren
                            </small>
                        </div>
                    </div>
                    
                    <!-- Premium Action Buttons -->
                    <div class="filter-actions d-flex flex-wrap gap-3 mt-4 pt-3 border-top">
                        <button type="button" id="applyFilters" class="btn-premium btn-premium-primary">
                            <i class="bi bi-arrow-clockwise me-2"></i>
                            Chart aktualisieren
                        </button>
                        <button type="button" id="resetFilters" class="btn-premium btn-premium-outline">
                            <i class="bi bi-x-circle me-2"></i>
                            Filter zurücksetzen
                        </button>
                        <div class="ms-auto d-flex gap-2">
                            <button type="button" id="exportChart" class="btn-premium btn-premium-outline btn-sm" title="Chart exportieren">
                                <i class="bi bi-download"></i>
                            </button>
                            <button type="button" id="fullscreenChart" class="btn-premium btn-premium-outline btn-sm" title="Vollbild">
                                <i class="bi bi-arrows-fullscreen"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Premium Chart Container -->
        <div class="col-12">
            <div class="card-premium animate-in mb-4">
                <div class="card-header border-0 bg-transparent p-4 pb-0">
                    <div class="d-flex align-items-center justify-content-between">
                        <div>
                            <h3 class="heading-3 mb-1 text-premium-primary">
                                <i class="bi bi-bar-chart-line me-2"></i>
                                BWA-Positionsentwicklung
                            </h3>
                            <p class="text-premium-muted mb-0">Zeitliche Entwicklung der BWA-Positionen mit interaktiver Visualisierung</p>
                        </div>
                        <div class="chart-info d-flex align-items-center gap-3">
                            <div class="legend-preview d-flex gap-2" id="chartLegendPreview">
                                <!-- Dynamic legend items will be inserted here -->
                            </div>
                        </div>
                    </div>
                </div>
                    <!-- Premium Loading State -->
                    <div id="loadingSpinner" class="premium-loading-state" style="display: none;">
                        <div class="loading-content">
                            <div class="loading-spinner mb-4"></div>
                            <h4 class="heading-4 text-premium-primary mb-2">BWA-Daten werden geladen</h4>
                            <p class="text-premium-muted mb-3">Bitte warten Sie, während die Positionsdaten analysiert werden...</p>
                            <div class="loading-progress">
                                <div class="progress" style="height: 6px; border-radius: 10px;">
                                    <div id="loadingProgress" class="progress-bar bg-premium-gradient progress-bar-striped progress-bar-animated" 
                                         role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                            </div>
                            <small class="text-premium-muted mt-3 d-block">
                                <i class="bi bi-clock me-1"></i>
                                Analysiere BWA-Positionen...
                            </small>
                        </div>
                    </div>

                    <!-- Premium Error State -->
                    <div id="errorMessage" class="alert-premium alert-premium-danger" style="display: none;">
                        <div class="d-flex align-items-start">
                            <i class="bi bi-exclamation-triangle-fill me-3 mt-1 fs-4 text-danger"></i>
                            <div class="flex-grow-1">
                                <h5 class="heading-5 mb-2">Fehler beim Laden der BWA-Daten</h5>
                                <p class="mb-2" id="errorText">Ein Fehler ist beim Laden der BWA-Positionsdaten aufgetreten.</p>
                                <div id="errorDetails" class="small text-premium-muted p-2 bg-light rounded mt-2" style="display: none;"></div>
                                <div class="error-actions mt-3 d-flex gap-2">
                                    <button type="button" id="retryButton" class="btn-premium btn-premium-outline btn-sm">
                                        <i class="bi bi-arrow-clockwise me-1"></i>
                                        Erneut versuchen
                                    </button>
                                    <button type="button" id="reportErrorButton" class="btn-premium btn-premium-outline btn-sm">
                                        <i class="bi bi-bug me-1"></i>
                                        Fehler melden
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Premium Chart Container -->
                    <div id="chartContainer" class="chart-container-premium" style="position: relative; height: 500px;">
                        <canvas id="positionTrendsChart" aria-label="BWA-Positionsentwicklung über Zeit"></canvas>
                    </div>

                    <!-- Premium No Data State -->
                    <div id="noDataMessage" class="premium-empty-state" style="display: none;">
                        <div class="empty-state-content">
                            <div class="empty-state-icon mb-4">
                                <i class="bi bi-graph-down display-1 text-premium-muted opacity-50"></i>
                            </div>
                            <h4 class="heading-4 text-premium-muted mb-3">Keine BWA-Daten verfügbar</h4>
                            <p class="text-premium-muted mb-4 px-4">
                                Für die ausgewählten Filterkriterien sind keine BWA-Positionsdaten vorhanden.
                                Bitte passen Sie Ihre Filter an oder importieren Sie weitere Finanzdaten.
                            </p>
                            
                            <!-- Suggestions -->
                            <div class="suggestions-container mb-4">
                                <div class="row g-3 text-start">
                                    <div class="col-sm-6">
                                        <div class="suggestion-item p-3 bg-light rounded-3">
                                            <i class="bi bi-calendar-range text-info me-2"></i>
                                            <strong class="small">Zeitraum erweitern</strong>
                                            <div class="small text-premium-muted">Wählen Sie einen größeren Datumsbereich</div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="suggestion-item p-3 bg-light rounded-3">
                                            <i class="bi bi-list-task text-warning me-2"></i>
                                            <strong class="small">Andere Positionen</strong>
                                            <div class="small text-premium-muted">Probieren Sie verschiedene BWA-Positionen</div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="suggestion-item p-3 bg-light rounded-3">
                                            <i class="bi bi-cloud-upload text-success me-2"></i>
                                            <strong class="small">Daten importieren</strong>
                                            <div class="small text-premium-muted">Laden Sie weitere BWA-Berichte hoch</div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="suggestion-item p-3 bg-light rounded-3">
                                            <i class="bi bi-sliders text-primary me-2"></i>
                                            <strong class="small">Filter prüfen</strong>
                                            <div class="small text-premium-muted">Überprüfen Sie die Filtereinstellungen</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Actions -->
                            <div class="empty-state-actions d-flex flex-wrap gap-3 justify-content-center">
                                <button type="button" id="resetFiltersFromNoData" class="btn-premium btn-premium-primary">
                                    <i class="bi bi-arrow-counterclockwise me-2"></i>
                                    Filter zurücksetzen
                                </button>
                                <a href="/" class="btn-premium btn-premium-outline">
                                    <i class="bi bi-cloud-upload me-2"></i>
                                    BWA-Daten hochladen
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Premium Information Panel -->
        <div class="col-12">
            <div class="card-premium animate-in">
                <div class="card-header border-0 bg-transparent p-4 pb-0">
                    <h4 class="heading-4 text-premium-primary mb-1">
                        <i class="bi bi-info-circle me-2"></i>
                        Analyse-Informationen
                    </h4>
                    <p class="text-premium-muted mb-0">Hinweise zur Interpretation der BWA-Positionsentwicklung</p>
                </div>
                <div class="card-body p-4">
                    <div class="row g-4">
                        <!-- Legend Section -->
                        <div class="col-lg-4">
                            <div class="info-section">
                                <h6 class="heading-6 text-premium-primary mb-3">
                                    <i class="bi bi-palette me-2"></i>Farbkodierung
                                </h6>
                                <div class="legend-items">
                                    <div class="legend-item d-flex align-items-center mb-2">
                                        <div class="legend-dot bg-success me-3" style="width: 12px; height: 12px; border-radius: 50%;"></div>
                                        <span class="small">Erlös-Positionen (Umsatzerlöse, etc.)</span>
                                    </div>
                                    <div class="legend-item d-flex align-items-center mb-2">
                                        <div class="legend-dot bg-danger me-3" style="width: 12px; height: 12px; border-radius: 50%;"></div>
                                        <span class="small">Kosten-Positionen (Personal-, Sachkosten)</span>
                                    </div>
                                    <div class="legend-item d-flex align-items-center">
                                        <div class="legend-dot bg-info me-3" style="width: 12px; height: 12px; border-radius: 50%;"></div>
                                        <span class="small">Sonstige Positionen</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Instructions Section -->
                        <div class="col-lg-4">
                            <div class="info-section">
                                <h6 class="heading-6 text-premium-primary mb-3">
                                    <i class="bi bi-cursor me-2"></i>Interaktive Bedienung
                                </h6>
                                <ul class="list-unstyled small text-premium-muted">
                                    <li class="mb-2">
                                        <i class="bi bi-mouse me-2 text-info"></i>
                                        Hover über Datenpunkte für Details
                                    </li>
                                    <li class="mb-2">
                                        <i class="bi bi-eye-slash me-2 text-warning"></i>
                                        Klick auf Legende zum Ein-/Ausblenden
                                    </li>
                                    <li class="mb-2">
                                        <i class="bi bi-funnel me-2 text-success"></i>
                                        Filter für präzise Analyse nutzen
                                    </li>
                                    <li>
                                        <i class="bi bi-arrows-fullscreen me-2 text-primary"></i>
                                        Vollbild für detaillierte Ansicht
                                    </li>
                                </ul>
                            </div>
                        </div>
                        
                        <!-- Technical Info -->
                        <div class="col-lg-4">
                            <div class="info-section">
                                <h6 class="heading-6 text-premium-primary mb-3">
                                    <i class="bi bi-gear me-2"></i>Technische Details
                                </h6>
                                <ul class="list-unstyled small text-premium-muted">
                                    <li class="mb-2">
                                        <i class="bi bi-currency-euro me-2 text-success"></i>
                                        Alle Beträge in EUR mit deutscher Formatierung
                                    </li>
                                    <li class="mb-2">
                                        <i class="bi bi-calendar-month me-2 text-info"></i>
                                        Monatliche BWA-Periodisierung
                                    </li>
                                    <li class="mb-2">
                                        <i class="bi bi-shield-check me-2 text-warning"></i>
                                        DSGVO-konforme Datenverarbeitung
                                    </li>
                                    <li>
                                        <i class="bi bi-speedometer me-2 text-primary"></i>
                                        Echtzeit-Datenaktualisierung
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Chart.js Library -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <script>
        /**
         * Position Trends Chart Implementation for German BWA Data
         * 
         * German Financial Context:
         * - Processes authentic German BWA (Betriebswirtschaftliche Auswertung) position data
         * - Position names preserved in German (e.g., "Personalkosten", "Umsatzerlöse")
         * - Follows German accounting conventions and cultural formatting
         * - Supports analysis of standard German business expense and revenue categories
         * 
         * Chart Features:
         * - Multi-line Chart.js visualization for position development over time
         * - Color coding based on German business logic (green for Erlöse, red for Kosten)
         * - German number formatting with Euro currency (1.234,56 €)
         * - German month abbreviations (Jan, Feb, Mär, Apr, Mai, Jun, Jul, Aug, Sep, Okt, Nov, Dez)
         * - Interactive legend with position type indicators (Revenue/Expense)
         * - AJAX-based data loading with proper German character encoding
         * - Responsive design optimized for German business users
         * 
         * Business Intelligence:
         * - Enables trend analysis of key German business metrics
         * - Supports seasonal pattern recognition in German fiscal calendar
         * - Facilitates comparison of revenue streams (Umsatzerlöse variations)
         * - Allows monitoring of major cost centers (Personalkosten, Materialkosten)
         */
        let positionChart = null;
        let currentChartData = null;
        
        // German locale formatting for currency
        const formatCurrency = (value) => {
            return new Intl.NumberFormat('de-DE', {
                style: 'currency',
                currency: 'EUR',
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            }).format(value);
        };
        
        // Color palette for different positions
        const getPositionColor = (positionName, type, index) => {
            // Base colors: Green for revenue, Red for expenses
            const baseColors = {
                revenue: [
                    '#28a745', '#20c997', '#17a2b8', '#6f42c1',
                    '#e83e8c', '#fd7e14', '#ffc107', '#6610f2'
                ],
                expense: [
                    '#dc3545', '#e74c3c', '#c0392b', '#a93226',
                    '#922b21', '#7b241c', '#641e16', '#58181a'
                ]
            };
            
            const colorSet = type.toLowerCase() === 'revenue' ? baseColors.revenue : baseColors.expense;
            return colorSet[index % colorSet.length];
        };
        
        /**
         * Initialize the Chart.js chart with configuration
         * Supports multiple datasets with different colors and styling
         */
        const initChart = () => {
            const ctx = document.getElementById('positionTrendsChart').getContext('2d');
            
            positionChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: []
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    interaction: {
                        intersect: false,
                        mode: 'index'
                    },
                    plugins: {
                        legend: {
                            position: 'top',
                            labels: {
                                usePointStyle: true,
                                padding: 15,
                                font: {
                                    size: 12
                                },
                                generateLabels: function(chart) {
                                    const original = Chart.defaults.plugins.legend.labels.generateLabels;
                                    const labels = original.call(this, chart);
                                    
                                    // Add type indicator to legend labels
                                    labels.forEach((label, index) => {
                                        if (chart.data.datasets[index]) {
                                            const type = chart.data.datasets[index].positionType || 'Unknown';
                                            label.text = `${label.text} (${type})`;
                                        }
                                    });
                                    
                                    return labels;
                                }
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const datasetLabel = context.dataset.label || '';
                                    const value = formatCurrency(context.parsed.y);
                                    return `${datasetLabel}: ${value}`;
                                },
                                title: function(context) {
                                    return `Period: ${context[0].label}`;
                                }
                            }
                        }
                    },
                    scales: {
                        x: {
                            display: true,
                            title: {
                                display: true,
                                text: 'Time Period',
                                font: {
                                    size: 14,
                                    weight: 'bold'
                                }
                            },
                            grid: {
                                display: false
                            }
                        },
                        y: {
                            display: true,
                            title: {
                                display: true,
                                text: 'Amount (EUR)',
                                font: {
                                    size: 14,
                                    weight: 'bold'
                                }
                            },
                            ticks: {
                                callback: function(value) {
                                    return formatCurrency(value);
                                }
                            }
                        }
                    },
                    elements: {
                        point: {
                            radius: 6,
                            hoverRadius: 8,
                            borderWidth: 2
                        },
                        line: {
                            borderWidth: 3,
                            tension: 0.2
                        }
                    }
                }
            });
        };
        
        /**
         * Load position trends data from the API endpoint
         * Handles filtering parameters and updates the chart
         */
        const loadPositionTrends = async () => {
            try {
                showLoading(true);
                hideError();
                hideNoData();
                
                // Get current filter values
                const selectedPosition = document.getElementById('positionSelect').value;
                const selectedType = document.querySelector('input[name="typeFilter"]:checked').value;
                const selectedYear = document.getElementById('yearSelect').value;
                
                // Build query parameters
                const params = new URLSearchParams();
                if (selectedPosition) {
                    params.append('positions', selectedPosition);
                }
                if (selectedYear) {
                    params.append('year', selectedYear);
                }
                if (selectedType && selectedType !== 'all') {
                    params.append('type', selectedType);
                }
                
                // Make API call
                const response = await fetch(`/PositionTrends?handler=PositionTrends&${params.toString()}`);
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const data = await response.json();
                
                // Check for server-side errors
                if (data.error) {
                    throw new Error(data.error);
                }
                
                currentChartData = data;
                updateChart(data);
                
            } catch (error) {
                console.error('Error loading position trends:', error);
                showError(`Failed to load data: ${error.message}`);
            } finally {
                showLoading(false);
            }
        };
        
        /**
         * Update the Chart.js chart with new data
         * Creates datasets for each position with appropriate styling
         */
        const updateChart = (data) => {
            if (!data.series || data.series.length === 0) {
                showNoData(true);
                positionChart.data.labels = [];
                positionChart.data.datasets = [];
                positionChart.update();
                return;
            }
            
            hideNoData();
            
            // Extract all unique periods from all series
            const allPeriods = [...new Set(
                data.series.flatMap(series => 
                    series.dataPoints.map(point => point.period)
                )
            )].sort();
            
            // Create datasets for Chart.js
            const datasets = data.series.map((series, index) => {
                const color = getPositionColor(series.positionName, series.type, index);
                
                // Create data array matching the periods
                const dataPoints = allPeriods.map(period => {
                    const point = series.dataPoints.find(p => p.period === period);
                    return point ? point.amount : null;
                });
                
                return {
                    label: series.positionName,
                    positionType: series.type, // Store for legend display
                    data: dataPoints,
                    borderColor: color,
                    backgroundColor: color + '20', // Add transparency for fill
                    borderWidth: 3,
                    fill: false,
                    tension: 0.2,
                    pointBackgroundColor: color,
                    pointBorderColor: '#ffffff',
                    pointBorderWidth: 2,
                    pointRadius: 6,
                    pointHoverRadius: 8,
                    spanGaps: true // Connect points across null values
                };
            });
            
            // Update chart data
            positionChart.data.labels = allPeriods;
            positionChart.data.datasets = datasets;
            positionChart.update();
        };
        
        /**
         * UI State Management Functions
         */
        const showLoading = (show) => {
            document.getElementById('loadingSpinner').style.display = show ? 'block' : 'none';
            document.getElementById('chartContainer').style.opacity = show ? '0.5' : '1';
        };
        
        const showError = (message) => {
            document.getElementById('errorText').textContent = message;
            document.getElementById('errorMessage').style.display = 'block';
        };
        
        const hideError = () => {
            document.getElementById('errorMessage').style.display = 'none';
        };
        
        const showNoData = (show) => {
            document.getElementById('noDataMessage').style.display = show ? 'block' : 'none';
        };
        
        const hideNoData = () => {
            document.getElementById('noDataMessage').style.display = 'none';
        };
        
        /**
         * Reset all filters to default values
         */
        const resetFilters = () => {
            document.getElementById('positionSelect').value = '';
            document.getElementById('yearSelect').value = '';
            document.getElementById('typeAll').checked = true;
            loadPositionTrends();
        };
        
        // Configuration constants
        const CHART_CONFIG = {
            DEBOUNCE_DELAY: 500
        };
        
        // Performance monitoring
        const performanceMonitor = {
            startTime: null
        };
        
        /**
         * Initialize page with enhanced performance monitoring and error handling
         */
        document.addEventListener('DOMContentLoaded', async function() {
            performanceMonitor.startTime = performance.now();
            
            try {
                console.log('Initializing Position Trends page...');
                
                // Initialize Chart.js
                initChart();
                
                // Setup additional event handlers
                setupAdditionalEventHandlers();
                
                // Load initial data
                await loadPositionTrends();
                
                // Event listeners for filter controls with debouncing
                const applyFiltersBtn = document.getElementById('applyFilters');
                const resetFiltersBtn = document.getElementById('resetFilters');
                const positionSelect = document.getElementById('positionSelect');
                const yearSelect = document.getElementById('yearSelect');
                
                if (applyFiltersBtn) {
                    applyFiltersBtn.addEventListener('click', loadPositionTrends);
                }
                
                if (resetFiltersBtn) {
                    resetFiltersBtn.addEventListener('click', resetFilters);
                }
                
                // Debounced auto-update on filter change
                let filterChangeTimeout;
                const debouncedFilterChange = () => {
                    clearTimeout(filterChangeTimeout);
                    filterChangeTimeout = setTimeout(() => {
                        loadPositionTrends();
                    }, CHART_CONFIG.DEBOUNCE_DELAY);
                };
                
                if (positionSelect) {
                    positionSelect.addEventListener('change', debouncedFilterChange);
                }
                
                if (yearSelect) {
                    yearSelect.addEventListener('change', debouncedFilterChange);
                }
                
                // Type filter radio buttons
                document.querySelectorAll('input[name="typeFilter"]').forEach(radio => {
                    radio.addEventListener('change', debouncedFilterChange);
                });
                
                // Setup accessibility improvements
                setupAccessibilityFeatures();
                
                // Setup performance monitoring
                setupPerformanceMonitoring();
                
                const initDuration = performance.now() - performanceMonitor.startTime;
                console.log(`Position Trends page initialized successfully in ${initDuration.toFixed(2)}ms`);
                
            } catch (error) {
                console.error('Failed to initialize Position Trends page:', error);
                showError('Fehler beim Initialisieren der Seite: ' + error.message);
            }
        });
        
        /**
         * Setup additional event handlers for enhanced UX
         */
        const setupAdditionalEventHandlers = () => {
            // Reset filters button in no-data message
            const resetFromNoData = document.getElementById('resetFiltersFromNoData');
            if (resetFromNoData) {
                resetFromNoData.addEventListener('click', resetFilters);
            }
            
            // Error reporting button (placeholder - implement as needed)
            const reportErrorButton = document.getElementById('reportErrorButton');
            if (reportErrorButton) {
                reportErrorButton.addEventListener('click', () => {
                    // Implement error reporting functionality
                    alert('Fehlerberichtsfunktion würde hier implementiert werden.');
                });
            }
        };
        
        /**
         * Setup accessibility features for German business users
         */
        const setupAccessibilityFeatures = () => {
            // Add ARIA labels in German
            const chart = document.getElementById('positionTrendsChart');
            if (chart) {
                chart.setAttribute('aria-label', 'BWA-Positionsentwicklung über Zeit');
                chart.setAttribute('role', 'img');
            }
            
            // Keyboard navigation for filters
            document.querySelectorAll('.form-select, .form-control').forEach(element => {
                element.addEventListener('keydown', (event) => {
                    if (event.key === 'Enter') {
                        event.target.blur(); // Trigger change event
                    }
                });
            });
        };
        
        /**
         * Setup performance monitoring and cleanup
         */
        const setupPerformanceMonitoring = () => {
            // Monitor memory usage
            if (performance.memory) {
                setInterval(() => {
                    const memoryUsage = performance.memory.usedJSHeapSize / 1024 / 1024; // MB
                    if (memoryUsage > 100) { // Alert if over 100MB
                        console.warn(`High memory usage detected: ${memoryUsage.toFixed(2)}MB`);
                    }
                }, 30000); // Check every 30 seconds
            }
            
            // Cleanup on page unload
            window.addEventListener('beforeunload', () => {
                if (positionChart) {
                    positionChart.destroy();
                }
            });
        };
    </script>
    
    <style>
        /* Enhanced mobile responsiveness */
        @@media (max-width: 768px) {
            #chartContainer {
                height: 350px !important;
            }
            
            .card-body {
                padding: 0.75rem;
            }
            
            .btn-group .btn {
                font-size: 0.875rem;
                padding: 0.375rem 0.5rem;
            }
        }
        
        /* Loading animation improvements */
        #loadingSpinner .spinner-border {
            animation-duration: 1s;
        }
        
        .progress {
            background-color: rgba(0,0,0,.1);
            border-radius: 0.25rem;
        }
        
        .progress-bar {
            transition: width 0.3s ease;
        }
        
        /* Error message styling */
        #errorMessage {
            border-left: 4px solid #dc3545;
        }
        
        #errorDetails {
            background-color: rgba(0,0,0,.05);
            border-radius: 0.25rem;
            padding: 0.5rem;
            font-family: monospace;
            max-height: 100px;
            overflow-y: auto;
        }
        
        /* Chart container optimizations */
        #chartContainer {
            position: relative;
            transition: opacity 0.3s ease;
        }
        
        /* Accessibility improvements */
        .btn:focus,
        .form-select:focus,
        .form-control:focus {
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }
        
        /* High contrast mode support */
        @@media (prefers-contrast: high) {
            .card {
                border-width: 2px;
            }
            
            .btn-outline-secondary {
                border-width: 2px;
            }
        }
        
        /* Reduced motion support */
        @@media (prefers-reduced-motion: reduce) {
            .progress-bar,
            #chartContainer {
                transition: none;
            }
            
            .spinner-border {
                animation: none;
            }
        }
    </style>
}